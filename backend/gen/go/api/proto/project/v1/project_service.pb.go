// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v6.32.0
// source: api/proto/project/v1/project_service.proto

package project_v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProjectsQueryFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Uid:
	//
	//	*ProjectsQueryFilter_Id
	//	*ProjectsQueryFilter_Slug
	Uid    isProjectsQueryFilter_Uid `protobuf_oneof:"uid"`
	Name   string                    `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Tags   []string                  `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	Offset *uint64                   `protobuf:"varint,5,opt,name=offset,proto3,oneof" json:"offset,omitempty"`
	Limit  *uint64                   `protobuf:"varint,6,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
}

func (x *ProjectsQueryFilter) Reset() {
	*x = ProjectsQueryFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_project_v1_project_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectsQueryFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectsQueryFilter) ProtoMessage() {}

func (x *ProjectsQueryFilter) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_project_v1_project_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectsQueryFilter.ProtoReflect.Descriptor instead.
func (*ProjectsQueryFilter) Descriptor() ([]byte, []int) {
	return file_api_proto_project_v1_project_service_proto_rawDescGZIP(), []int{0}
}

func (m *ProjectsQueryFilter) GetUid() isProjectsQueryFilter_Uid {
	if m != nil {
		return m.Uid
	}
	return nil
}

func (x *ProjectsQueryFilter) GetId() uint64 {
	if x, ok := x.GetUid().(*ProjectsQueryFilter_Id); ok {
		return x.Id
	}
	return 0
}

func (x *ProjectsQueryFilter) GetSlug() string {
	if x, ok := x.GetUid().(*ProjectsQueryFilter_Slug); ok {
		return x.Slug
	}
	return ""
}

func (x *ProjectsQueryFilter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProjectsQueryFilter) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ProjectsQueryFilter) GetOffset() uint64 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

func (x *ProjectsQueryFilter) GetLimit() uint64 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

type isProjectsQueryFilter_Uid interface {
	isProjectsQueryFilter_Uid()
}

type ProjectsQueryFilter_Id struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3,oneof"`
}

type ProjectsQueryFilter_Slug struct {
	Slug string `protobuf:"bytes,2,opt,name=slug,proto3,oneof"`
}

func (*ProjectsQueryFilter_Id) isProjectsQueryFilter_Uid() {}

func (*ProjectsQueryFilter_Slug) isProjectsQueryFilter_Uid() {}

type ProjectsList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Project `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ProjectsList) Reset() {
	*x = ProjectsList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_project_v1_project_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectsList) ProtoMessage() {}

func (x *ProjectsList) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_project_v1_project_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectsList.ProtoReflect.Descriptor instead.
func (*ProjectsList) Descriptor() ([]byte, []int) {
	return file_api_proto_project_v1_project_service_proto_rawDescGZIP(), []int{1}
}

func (x *ProjectsList) GetList() []*Project {
	if x != nil {
		return x.List
	}
	return nil
}

type ProjectRevisionQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ProjectUid:
	//
	//	*ProjectRevisionQuery_ProjectId
	//	*ProjectRevisionQuery_ProjectSlug
	ProjectUid isProjectRevisionQuery_ProjectUid `protobuf_oneof:"project_uid"`
	RevisionId uint64                            `protobuf:"varint,3,opt,name=revision_id,json=revisionId,proto3" json:"revision_id,omitempty"`
}

func (x *ProjectRevisionQuery) Reset() {
	*x = ProjectRevisionQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_project_v1_project_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectRevisionQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectRevisionQuery) ProtoMessage() {}

func (x *ProjectRevisionQuery) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_project_v1_project_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectRevisionQuery.ProtoReflect.Descriptor instead.
func (*ProjectRevisionQuery) Descriptor() ([]byte, []int) {
	return file_api_proto_project_v1_project_service_proto_rawDescGZIP(), []int{2}
}

func (m *ProjectRevisionQuery) GetProjectUid() isProjectRevisionQuery_ProjectUid {
	if m != nil {
		return m.ProjectUid
	}
	return nil
}

func (x *ProjectRevisionQuery) GetProjectId() uint64 {
	if x, ok := x.GetProjectUid().(*ProjectRevisionQuery_ProjectId); ok {
		return x.ProjectId
	}
	return 0
}

func (x *ProjectRevisionQuery) GetProjectSlug() string {
	if x, ok := x.GetProjectUid().(*ProjectRevisionQuery_ProjectSlug); ok {
		return x.ProjectSlug
	}
	return ""
}

func (x *ProjectRevisionQuery) GetRevisionId() uint64 {
	if x != nil {
		return x.RevisionId
	}
	return 0
}

type isProjectRevisionQuery_ProjectUid interface {
	isProjectRevisionQuery_ProjectUid()
}

type ProjectRevisionQuery_ProjectId struct {
	ProjectId uint64 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3,oneof"`
}

type ProjectRevisionQuery_ProjectSlug struct {
	ProjectSlug string `protobuf:"bytes,2,opt,name=project_slug,json=projectSlug,proto3,oneof"`
}

func (*ProjectRevisionQuery_ProjectId) isProjectRevisionQuery_ProjectUid() {}

func (*ProjectRevisionQuery_ProjectSlug) isProjectRevisionQuery_ProjectUid() {}

type ProjectCreateOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProjectCreateOptions) Reset() {
	*x = ProjectCreateOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_project_v1_project_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectCreateOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectCreateOptions) ProtoMessage() {}

func (x *ProjectCreateOptions) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_project_v1_project_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectCreateOptions.ProtoReflect.Descriptor instead.
func (*ProjectCreateOptions) Descriptor() ([]byte, []int) {
	return file_api_proto_project_v1_project_service_proto_rawDescGZIP(), []int{3}
}

var File_api_proto_project_v1_project_service_proto protoreflect.FileDescriptor

var file_api_proto_project_v1_project_service_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x63, 0x79,
	0x63, 0x6c, 0x6f, 0x6e, 0x65, 0x64, 0x78, 0x5f, 0x75, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb9, 0x01, 0x0a,
	0x13, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x12, 0x1b, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x48, 0x01, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x19, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x48, 0x02, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x44, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x79, 0x63, 0x6c, 0x6f, 0x6e, 0x65,
	0x64, 0x78, 0x5f, 0x75, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x8c,
	0x01, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x6c, 0x75, 0x67, 0x12, 0x1f, 0x0a,
	0x0b, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x42, 0x0d,
	0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x22, 0x16, 0x0a,
	0x14, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x32, 0xfc, 0x06, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x89, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x42, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2c, 0x2e, 0x63, 0x79, 0x63, 0x6c, 0x6f, 0x6e, 0x65, 0x64,
	0x78, 0x5f, 0x75, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x1a, 0x25, 0x2e, 0x63, 0x79, 0x63, 0x6c, 0x6f, 0x6e, 0x65, 0x64, 0x78, 0x5f,
	0x75, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x12, 0x12, 0x10, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x12, 0x96, 0x01, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x2c, 0x2e, 0x63, 0x79, 0x63, 0x6c, 0x6f, 0x6e, 0x65, 0x64, 0x78, 0x5f,
	0x75, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x1a, 0x20, 0x2e, 0x63, 0x79, 0x63, 0x6c, 0x6f, 0x6e, 0x65, 0x64, 0x78, 0x5f, 0x75, 0x69,
	0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x5a, 0x19, 0x12, 0x17, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f,
	0x7b, 0x73, 0x6c, 0x75, 0x67, 0x7d, 0x12, 0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x70, 0x0a,
	0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x20,
	0x2e, 0x63, 0x79, 0x63, 0x6c, 0x6f, 0x6e, 0x65, 0x64, 0x78, 0x5f, 0x75, 0x69, 0x2e, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x1a, 0x20, 0x2e, 0x63, 0x79, 0x63, 0x6c, 0x6f, 0x6e, 0x65, 0x64, 0x78, 0x5f, 0x75, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x3a, 0x01, 0x2a, 0x1a, 0x10, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12,
	0x75, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x20, 0x2e, 0x63, 0x79, 0x63, 0x6c, 0x6f, 0x6e, 0x65, 0x64, 0x78, 0x5f, 0x75, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x79, 0x63, 0x6c, 0x6f, 0x6e, 0x65, 0x64, 0x78, 0x5f, 0x75,
	0x69, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x32,
	0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xcc, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x2e,
	0x63, 0x79, 0x63, 0x6c, 0x6f, 0x6e, 0x65, 0x64, 0x78, 0x5f, 0x75, 0x69, 0x2e, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x21, 0x2e, 0x63,
	0x79, 0x63, 0x6c, 0x6f, 0x6e, 0x65, 0x64, 0x78, 0x5f, 0x75, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x5e, 0x5a, 0x2f, 0x12, 0x2d, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x6c, 0x75, 0x67, 0x7d, 0x2f, 0x7b, 0x72, 0x65, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x2b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x8c, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x21, 0x2e, 0x63, 0x79, 0x63, 0x6c, 0x6f, 0x6e, 0x65, 0x64, 0x78, 0x5f, 0x75, 0x69, 0x2e, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x1a, 0x21, 0x2e, 0x63, 0x79, 0x63, 0x6c, 0x6f, 0x6e, 0x65, 0x64, 0x78, 0x5f, 0x75,
	0x69, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x3a, 0x01, 0x2a,
	0x32, 0x22, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x42, 0x48, 0x5a, 0x46, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x51, 0x76, 0x69, 0x6e, 0x65, 0x6f, 0x78, 0x2f, 0x63, 0x79, 0x63, 0x6c, 0x6f,
	0x6e, 0x65, 0x64, 0x78, 0x2d, 0x75, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x2f, 0x76, 0x31, 0x3b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x76, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_project_v1_project_service_proto_rawDescOnce sync.Once
	file_api_proto_project_v1_project_service_proto_rawDescData = file_api_proto_project_v1_project_service_proto_rawDesc
)

func file_api_proto_project_v1_project_service_proto_rawDescGZIP() []byte {
	file_api_proto_project_v1_project_service_proto_rawDescOnce.Do(func() {
		file_api_proto_project_v1_project_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_project_v1_project_service_proto_rawDescData)
	})
	return file_api_proto_project_v1_project_service_proto_rawDescData
}

var file_api_proto_project_v1_project_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_api_proto_project_v1_project_service_proto_goTypes = []interface{}{
	(*ProjectsQueryFilter)(nil),  // 0: cyclonedx_ui.project.v1.ProjectsQueryFilter
	(*ProjectsList)(nil),         // 1: cyclonedx_ui.project.v1.ProjectsList
	(*ProjectRevisionQuery)(nil), // 2: cyclonedx_ui.project.v1.ProjectRevisionQuery
	(*ProjectCreateOptions)(nil), // 3: cyclonedx_ui.project.v1.ProjectCreateOptions
	(*Project)(nil),              // 4: cyclonedx_ui.project.v1.Project
	(*Revision)(nil),             // 5: cyclonedx_ui.project.v1.Revision
}
var file_api_proto_project_v1_project_service_proto_depIdxs = []int32{
	4, // 0: cyclonedx_ui.project.v1.ProjectsList.list:type_name -> cyclonedx_ui.project.v1.Project
	0, // 1: cyclonedx_ui.project.v1.ProjectService.GetProjectsByQueryFilter:input_type -> cyclonedx_ui.project.v1.ProjectsQueryFilter
	0, // 2: cyclonedx_ui.project.v1.ProjectService.GetProject:input_type -> cyclonedx_ui.project.v1.ProjectsQueryFilter
	4, // 3: cyclonedx_ui.project.v1.ProjectService.CreateProject:input_type -> cyclonedx_ui.project.v1.Project
	4, // 4: cyclonedx_ui.project.v1.ProjectService.UpdateProject:input_type -> cyclonedx_ui.project.v1.Project
	2, // 5: cyclonedx_ui.project.v1.ProjectService.GetProjectRevision:input_type -> cyclonedx_ui.project.v1.ProjectRevisionQuery
	5, // 6: cyclonedx_ui.project.v1.ProjectService.UpdateProjectRevision:input_type -> cyclonedx_ui.project.v1.Revision
	1, // 7: cyclonedx_ui.project.v1.ProjectService.GetProjectsByQueryFilter:output_type -> cyclonedx_ui.project.v1.ProjectsList
	4, // 8: cyclonedx_ui.project.v1.ProjectService.GetProject:output_type -> cyclonedx_ui.project.v1.Project
	4, // 9: cyclonedx_ui.project.v1.ProjectService.CreateProject:output_type -> cyclonedx_ui.project.v1.Project
	4, // 10: cyclonedx_ui.project.v1.ProjectService.UpdateProject:output_type -> cyclonedx_ui.project.v1.Project
	5, // 11: cyclonedx_ui.project.v1.ProjectService.GetProjectRevision:output_type -> cyclonedx_ui.project.v1.Revision
	5, // 12: cyclonedx_ui.project.v1.ProjectService.UpdateProjectRevision:output_type -> cyclonedx_ui.project.v1.Revision
	7, // [7:13] is the sub-list for method output_type
	1, // [1:7] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_api_proto_project_v1_project_service_proto_init() }
func file_api_proto_project_v1_project_service_proto_init() {
	if File_api_proto_project_v1_project_service_proto != nil {
		return
	}
	file_api_proto_project_v1_project_proto_init()
	file_api_proto_project_v1_revision_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_proto_project_v1_project_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectsQueryFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_project_v1_project_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectsList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_project_v1_project_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectRevisionQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_project_v1_project_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectCreateOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_proto_project_v1_project_service_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ProjectsQueryFilter_Id)(nil),
		(*ProjectsQueryFilter_Slug)(nil),
	}
	file_api_proto_project_v1_project_service_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*ProjectRevisionQuery_ProjectId)(nil),
		(*ProjectRevisionQuery_ProjectSlug)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_project_v1_project_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_project_v1_project_service_proto_goTypes,
		DependencyIndexes: file_api_proto_project_v1_project_service_proto_depIdxs,
		MessageInfos:      file_api_proto_project_v1_project_service_proto_msgTypes,
	}.Build()
	File_api_proto_project_v1_project_service_proto = out.File
	file_api_proto_project_v1_project_service_proto_rawDesc = nil
	file_api_proto_project_v1_project_service_proto_goTypes = nil
	file_api_proto_project_v1_project_service_proto_depIdxs = nil
}
