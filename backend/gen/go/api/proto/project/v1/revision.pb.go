// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: api/proto/project/v1/revision.proto

package project_v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Revision struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ProjectId     uint64                 `protobuf:"varint,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	GitTags       []string               `protobuf:"bytes,4,rep,name=git_tags,json=gitTags,proto3" json:"git_tags,omitempty"`
	GitBranch     []string               `protobuf:"bytes,5,rep,name=git_branch,json=gitBranch,proto3" json:"git_branch,omitempty"`
	GitCommitHash *string                `protobuf:"bytes,6,opt,name=git_commit_hash,json=gitCommitHash,proto3,oneof" json:"git_commit_hash,omitempty"`
	VcsUrl        string                 `protobuf:"bytes,7,opt,name=vcs_url,json=vcsUrl,proto3" json:"vcs_url,omitempty"`
	CreatedBy     string                 `protobuf:"bytes,8,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	SbomFileUuid  *string                `protobuf:"bytes,9,opt,name=sbom_file_uuid,json=sbomFileUuid,proto3,oneof" json:"sbom_file_uuid,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3,oneof" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3,oneof" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Revision) Reset() {
	*x = Revision{}
	mi := &file_api_proto_project_v1_revision_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Revision) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Revision) ProtoMessage() {}

func (x *Revision) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_project_v1_revision_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Revision.ProtoReflect.Descriptor instead.
func (*Revision) Descriptor() ([]byte, []int) {
	return file_api_proto_project_v1_revision_proto_rawDescGZIP(), []int{0}
}

func (x *Revision) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Revision) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Revision) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *Revision) GetGitTags() []string {
	if x != nil {
		return x.GitTags
	}
	return nil
}

func (x *Revision) GetGitBranch() []string {
	if x != nil {
		return x.GitBranch
	}
	return nil
}

func (x *Revision) GetGitCommitHash() string {
	if x != nil && x.GitCommitHash != nil {
		return *x.GitCommitHash
	}
	return ""
}

func (x *Revision) GetVcsUrl() string {
	if x != nil {
		return x.VcsUrl
	}
	return ""
}

func (x *Revision) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *Revision) GetSbomFileUuid() string {
	if x != nil && x.SbomFileUuid != nil {
		return *x.SbomFileUuid
	}
	return ""
}

func (x *Revision) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Revision) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

var File_api_proto_project_v1_revision_proto protoreflect.FileDescriptor

const file_api_proto_project_v1_revision_proto_rawDesc = "" +
	"\n" +
	"#api/proto/project/v1/revision.proto\x12\x17cyclonedx_ui.project.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xdc\x03\n" +
	"\bRevision\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"project_id\x18\x03 \x01(\x04R\tprojectId\x12\x19\n" +
	"\bgit_tags\x18\x04 \x03(\tR\agitTags\x12\x1d\n" +
	"\n" +
	"git_branch\x18\x05 \x03(\tR\tgitBranch\x12+\n" +
	"\x0fgit_commit_hash\x18\x06 \x01(\tH\x00R\rgitCommitHash\x88\x01\x01\x12\x17\n" +
	"\avcs_url\x18\a \x01(\tR\x06vcsUrl\x12\x1d\n" +
	"\n" +
	"created_by\x18\b \x01(\tR\tcreatedBy\x12)\n" +
	"\x0esbom_file_uuid\x18\t \x01(\tH\x01R\fsbomFileUuid\x88\x01\x01\x12>\n" +
	"\n" +
	"created_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampH\x02R\tcreatedAt\x88\x01\x01\x12>\n" +
	"\n" +
	"updated_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampH\x03R\tupdatedAt\x88\x01\x01B\x12\n" +
	"\x10_git_commit_hashB\x11\n" +
	"\x0f_sbom_file_uuidB\r\n" +
	"\v_created_atB\r\n" +
	"\v_updated_atBHZFgithub.com/Qvineox/cyclonedx-ui/gen/go/api/proto/project/v1;project_v1b\x06proto3"

var (
	file_api_proto_project_v1_revision_proto_rawDescOnce sync.Once
	file_api_proto_project_v1_revision_proto_rawDescData []byte
)

func file_api_proto_project_v1_revision_proto_rawDescGZIP() []byte {
	file_api_proto_project_v1_revision_proto_rawDescOnce.Do(func() {
		file_api_proto_project_v1_revision_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_project_v1_revision_proto_rawDesc), len(file_api_proto_project_v1_revision_proto_rawDesc)))
	})
	return file_api_proto_project_v1_revision_proto_rawDescData
}

var file_api_proto_project_v1_revision_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_api_proto_project_v1_revision_proto_goTypes = []any{
	(*Revision)(nil),              // 0: cyclonedx_ui.project.v1.Revision
	(*timestamppb.Timestamp)(nil), // 1: google.protobuf.Timestamp
}
var file_api_proto_project_v1_revision_proto_depIdxs = []int32{
	1, // 0: cyclonedx_ui.project.v1.Revision.created_at:type_name -> google.protobuf.Timestamp
	1, // 1: cyclonedx_ui.project.v1.Revision.updated_at:type_name -> google.protobuf.Timestamp
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_api_proto_project_v1_revision_proto_init() }
func file_api_proto_project_v1_revision_proto_init() {
	if File_api_proto_project_v1_revision_proto != nil {
		return
	}
	file_api_proto_project_v1_revision_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_project_v1_revision_proto_rawDesc), len(file_api_proto_project_v1_revision_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_proto_project_v1_revision_proto_goTypes,
		DependencyIndexes: file_api_proto_project_v1_revision_proto_depIdxs,
		MessageInfos:      file_api_proto_project_v1_revision_proto_msgTypes,
	}.Build()
	File_api_proto_project_v1_revision_proto = out.File
	file_api_proto_project_v1_revision_proto_goTypes = nil
	file_api_proto_project_v1_revision_proto_depIdxs = nil
}
